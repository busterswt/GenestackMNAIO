---
# Copyright 2022, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in witing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Update hosts
  hosts: all
  gather_facts: true
  become: true
  vars_files:
  - defaults/main.yml
  - vars/main.yml
  tasks:
    - name: Ensure host entries for API endpoints
      lineinfile:
        path: /etc/hosts
        regexp: '^{{ item }}'
        line: '{{ item }}'
        create: yes
      with_items:
        - '172.29.236.10 internalapi.rsprivatecloud.net'
        - '172.29.236.11 publicapi.rsprivatecloud.net'

- name: Setup RPC Deployment
  hosts: deploy_hosts
  gather_facts: true
  environment: "{{ deployment_environment_variables | default({}) }}"
  become: true
  vars_files:
  - defaults/main.yml
  - vars/main.yml
  tags:
    - deploy-osa
  tasks:
    - debug:
        msg: "{{ playbook_dir }}/vars/{{ ansible_os_family | lower }}.yml"

    - name: Gather variables for each operating system
      include_vars: "{{ item }}"
      with_first_found:
        - "{{ playbook_dir }}/vars/{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_distribution | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_os_family | lower }}.yml"
      tags:
        - always

    - name: Remove os-storage (temporary)
      file:
        path: "/etc/openstack_deploy/conf.d/os-storage.yml"
        state: absent
      when:
        - pre_config_osa | default(true) | bool

    - name: Remove inventory (temporary)
      file:
        path: "/etc/openstack_deploy/openstack_inventory.json"
        state: absent
      when:
        - pre_config_osa | default(true) | bool

    - name: Drop compute config
      template:
        src: "rpc/os-computes.yml.j2"
        dest: /etc/openstack_deploy/conf.d/os-computes.yml
        mode: "0644"
        owner: root
        group: root

#    - debug: var=hostvars[item]
#      with_items: "{{groups['loadbalancer_hosts']}}"

    - name: Drop control plane config
      template:
        src: "rpc/os-control-plane.yml.j2"
        dest: /etc/openstack_deploy/conf.d/os-control-plane.yml
        mode: "0644"
        owner: root
        group: root

    - name: Drop osa user variables
      template:
        src: "rpc/user_local_variables.yml.j2"
        dest: /etc/openstack_deploy/user_local_variables.yml
        mode: "0644"
        owner: root
        group: root

    - name: Create OSA group_vars directory
      file:
        path: "/etc/openstack_deploy/group_vars"
        state: directory
        owner: "root"
        group: "root"
        mode: "0755"
      when:
        - pre_config_osa | default(true) | bool

    - name: Drop OVS group_vars config
      template:
        src: "ovs_network_hosts_group.j2"
        dest: "/etc/openstack_deploy/group_vars/network_hosts"
        mode: "0644"
        owner: root
        group: root

    - name: Ensure the user_variables file is populated
      lineinfile:
        path: /etc/openstack_deploy/user_local_variables.yml
        regexp: '^{{ item }}'
        line: '{{ item }}'
        create: yes
      with_items:
        - '---'
        - 'osa_ops_mnaio: true'
      when:
        - pre_config_osa | default(true) | bool

    - name: Bootstrap ansible
      command: bash ./scripts/bootstrap-ansible.sh
      args:
        chdir: /opt/openstack-ansible
      when:
        - run_osa | default(true) | bool

    - name: Config Tmux
      lineinfile:
        path: /root/.tmux.conf
        regexp: '^set-option'
        line: 'set-option -g history-limit 20000'
        owner: root
        group: root
        mode: 0644
        create: yes

    - name: Run OSA
      command: "{{ item }}"
      args:
        chdir: /opt/openstack-ansible/playbooks
      with_items:
        - tmux new-session -d -s build-osa
        - tmux select-pane -t 0
        - tmux send-keys "ulimit -n 10240" C-m
#        - tmux send-keys "openstack-ansible setup-hosts.yml setup-infrastructure.yml setup-openstack.yml" C-m
      when:
        - inventory_hostname == groups['deploy_hosts'][0]
        - run_osa | default(true) | bool

    - name: Finished notice
      debug:
        msg: |
          RPC-O deploy running. To check on the state of this deployment, login
          to the {{ groups['deploy_hosts'][0] }} VM (ssh -i id_rsa_mnaio.key ubuntu@{{ ansible_ssh_host }}) and attach
          to the "build-osa" tmux session.
      when:
        - run_osa | default(true) | bool
